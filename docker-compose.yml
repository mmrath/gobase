version: "3"

services:
  clipo-web:
    image: node:lts
    command: sh -c "
      ../build/local-ca/update-ca-in-docker.sh &&
      yarn &&
      yarn start clipo --proxy-config proxy.conf.js --base-href=/clipo/
      "
    environment:
      - NODE_ENV=development
      - API_PROXY=http://clipo:9010
    ports:
      - "8010:4200"
    working_dir: /root/web
    volumes:
      - .:/root:cached

  admin-web:
    image: node:lts
    command: sh -c "
      ../build/local-ca/update-ca-in-docker.sh &&
      yarn &&
      yarn start oppo --proxy-config proxy.conf.js --base-href=/oppo/
      "
    environment:
      - NODE_ENV=development
      - API_PROXY=http://oppo:9020
    ports:
      - "8020:4200"
    working_dir: /root/web
    volumes:
      - .:/root:cached

  clipo:
    image: golang:latest
    command: sh -c "
      ../build/local-ca/update-ca-in-docker.sh &&
      ../build/scripts/wait-for-it.sh db:5432 -t 10 -- ./build-and-run.sh clipo
      "
    environment:
      - APP_DOMAIN_NAME=test.example.com
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_USERNAME=${CLIPO_DB_USERNAME}
      - DB_PASSWORD=${CLIPO_DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - DB_SSLMODE=${DB_SSLMODE}

      - SMTP_HOST=mail
      - SMTP_PORT=2500
      - SMTP_USERNAME=
      - SMTP_PASSWORD=
      - SMTP_TEMPLATE_PATH=./apps/clipo/resources/templates/email
    depends_on:
      - db-migration
      - mail
    ports:
      - "9010:9010"
    working_dir: /root/golang
    volumes:
      - .:/root
      - go_modules:/go/pkg/mod

  db:
    image: "postgres:12-alpine"
    ports:
      - "4032:5432"
    environment:
      - POSTGRES_USER=${DBA_USERNAME}
      - POSTGRES_PASSWORD=${DBA_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
      - DATABASE_HOST=${DB_HOST}
      - CLIPO_DB_PASSWORD=${CLIPO_DB_PASSWORD}
      - OPPO_DB_PASSWORD=${OPPO_DB_PASSWORD}
      - MIGRATION_DB_PASSWORD=${MIGRATION_DB_PASSWORD}
    volumes:
      - pg_data:/var/lib/postgresql/data
      - ./golang/apps/db-migration/resources/scripts/init:/docker-entrypoint-initdb.d/


  db-migration:
    image: golang:latest
    command: sh -c "
      ../build/local-ca/update-ca-in-docker.sh &&
      ../build/scripts/wait-for-it.sh db:5432 -t 10 -- go run ./apps/db-migration
      "
    environment:
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_USERNAME=${MIGRATION_DB_USERNAME}
      - DB_PASSWORD=${MIGRATION_DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - DB_SSLMODE=${DB_SSLMODE}
      - MIGRATION_DIR=./apps/db-migration/resources/migrations
    depends_on:
      - db
    working_dir: /work/golang
    volumes:
      - .:/work:cached
      - go_modules:/go/pkg/mod
  mail:
    image: inbucket/inbucket:latest
    restart: always
    ports:
      - 4011:1100
      - 4012:9000
      - 4013:2500

volumes:
  pg_data:
  go_modules:
